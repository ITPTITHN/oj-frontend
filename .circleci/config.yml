version: 2.1
orbs:
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  build:
    working_directory: ~/project
    docker:
      - image: cimg/node:20.10
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Run build command
          command: yarn run build
      - persist_to_workspace:
          name: "Built files"
          root: ~/project
          paths:
            - "./.next"

  containerize:
    working_directory: ~/project
    docker:
      - image: cimg/base:2022.06
    parameters:
      image_tag:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run:
          name: "Login to docker"
          command: docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD} ${REGISTRY_URL}
      - run:
          name: "Create Docker builder"
          command: docker buildx create --use
      - run:
          name: "Build and push image with docker buildx"
          command: docker buildx build --push --progress plain --platform linux/amd64,linux/arm64 -t ${IMAGE_NAME}:${CIRCLE_SHA1:0:8} -t ${IMAGE_NAME}:<<parameters.image_tag>> -f Dockerfile .

  deploy:
    docker:
      - image: cimg/base:2023.11
    steps:
      - kubernetes/install-kubectl
      - kubernetes/install-kubeconfig
      - run:
          name: "Deploy to kubernetes"
          command: kubectl rollout restart deployment/${K8S_DEPLOYMENT_NAME} --namespace=${K8S_NAMESPACE}
    environment:
      K8S_DEPLOYMENT_NAME: oj-frontend-deployment


workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - release/develop
                - release/production

      - containerize:
          name: containerize develop
          context: org-global
          image_tag: dev
          requires:
            - build
          filters:
            branches:
              only:
                - release/develop
      - containerize:
          name: containerize production
          context: org-global
          image_tag: latest
          requires:
            - build
          filters:
            branches:
              only:
                - release/production

      - deploy:
          name: deploy develop
          context:
            - org-global
            - k8s-development
          requires:
            - containerize develop
      - deploy:
          type: approval
          name: deploy production
          context:
            - org-global
            - k8s-production
          requires:
            - containerize production

  build_test_only:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /feature\/.*/
                - /bugfix\/.*/
                - /hotfix\/.*/
